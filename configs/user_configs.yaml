connectors:
  - name: kafka_01
    type: kafka
    params:
      brokers: ["localhost:9092"]
    tls:
      enabled: true
      ca_file: /etc/ssl/certs/ca.pem
      # cert_file: /etc/ssl/certs/client.pem
      # key_file: /etc/ssl/private/client.key
      insecure_skip_verify: true
    ingress:
      - topic: topic-kafka1
        source_name: kafka.app.input
    egress:
      - name: synced_all
        type: topic
        topic_template: "bridge.synced.{source_name}"

  # - name: nats_core
  #   type: nats
  #   params:
  #     url: "nats://localhost:4222"
  #   tls:
  #     enabled: false
  #   ingress:
  #     - subject: "bridge.in.>"
  #       source_name: nats.bridge.in
  #   egress:
  #     - name: bridge_out
  #       type: subject
  #       subject_template: "bridge.out.{source_name}"

  - name: rabbit_main
    type: rabbitmq
    params:
      url: "amqp://guest:guest@127.0.0.1:5672/"
    tls:
      enabled: false
      ca_file: /etc/ssl/certs/ca.pem
      # cert_file: /etc/ssl/certs/client.pem
      # key_file: /etc/ssl/private/client.key
      insecure_skip_verify: true
    ingress:
      - queue: orders.inbox
        source_name: rabbit.orders.inbox
    egress:
      - name: orders_synced
        type: exchange
        exchange: orders
        kind: topic
        routing_key_template: "orders.synced.test"

# ========== 2) FILTER RULES (CEL) ==========
# drop is the default action if a filter fiekd is missing
filters:
  - name: user_basic
    expr: 'has(payload.name) && (payload.age > 16 || payload.name.contains("A"))'
    on_missing_field: drop   # drop | skip | false

  - name: size_le_1mb
    expr: 'meta.size <= 1048576'

  - name: recent_1h
    expr: 'meta.createdAtMs >= nowMs() - 3600 * 1000'

# ========== 3) PROJECTIONS (Minimum Payload) ==========
# - best_effort: true => "có trường nào thì lấy trường đó" (không drop nếu thiếu)
# - on_missing_field: drop|skip|false (áp dụng khi best_effort=false)
projections:
  - name: keep_name_age_best_effort
    include:
      - payload.name
      - payload.age
    best_effort: true

  - name: keep_name_age_strict
    include:
      - payload.name
      - payload.age
    best_effort: false
    on_missing_field: drop

# ========== 4) GROUP RECEIVERS ==========
group_receivers:
  # - name: grp_sync_all
  #   targets:
  #     - connector: kafka_01
  #       target: synced_all
  #     - connector: nats_core
  #       target: bridge_out
  #     - connector: rabbit_main
  #       target: orders_synced

  # - name: grp_kafka_nats_hotpath
  #   targets:
  #     - connector: kafka_01
  #       target: synced_all

# ========== 5) ROUTES ==========
routes:
  - name: rabbit_orders_to_kafka
    from:
      connector: kafka_01
      source: kafka.app.input   
    to:
      connector: rabbit_main
      target: orders_synced
    mode:
      type: persistent                
    filters: [user_basic]
    projection: keep_name_age_best_effort

  # - name: kafka_app_to_group_all
  #   from:
  #     connector: kafka_01
  #     source: kafka.app.input
  #   to_group: grp_sync_all
  #   mode:
  #     type: drop
  #     # ttl_ms: -12                   
  #     max_attempts: 3                  
  #   filters: [user_basic]
  #   projection: keep_name_age_strict

  # - name: nats_bridge_in_to_kafka_hotpath
  #   from:
  #     connector: nats_core
  #     source: nats.bridge.in
  #   to_group: grp_kafka_nats_hotpath
  #   mode:
  #     type: persistent
  #   filters: [size_le_1mb, recent_1h]
  #   projection: keep_name_age_best_effort